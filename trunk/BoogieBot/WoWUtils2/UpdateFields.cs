using System;
using System.Collections.Generic;
using System.Text;

namespace Foole.WoW
{

    public enum UpdateFields
    {
           OBJECT_FIELD_GUID                        =               	0x000,  // Size: 2, Type: GUID, Flags: 1
           OBJECT_FIELD_GUID_01                        =            	0x001,  // Size: 2, Type: GUID, Flags: 1
           OBJECT_FIELD_TYPE                        =               	0x002,  // Size: 1, Type: Int32, Flags: 1
           OBJECT_FIELD_ENTRY                        =              	0x003,  // Size: 1, Type: Int32, Flags: 1
           OBJECT_FIELD_SCALE_X                        =            	0x004,  // Size: 1, Type: Float, Flags: 1
           OBJECT_FIELD_PADDING                        =            	0x005,  // Size: 1, Type: Int32, Flags: 0
           OBJECT_END                        =                      	0x006,  // Size: 1, Type: Int32, Flags: 0

// CONTAINER-prefix fields:
           CONTAINER_FIELD_NUM_SLOTS                        =       	ITEM_END + 0x000,  // Size: 1, Type: Int32, Flags: 1
           CONTAINER_ALIGN_PAD                        =             	ITEM_END + 0x001,  // Size: 1, Type: Bytes, Flags: 0
           CONTAINER_FIELD_SLOT_1                        =          	ITEM_END + 0x002,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_01                        =         	ITEM_END + 0x003,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_02                        =         	ITEM_END + 0x004,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_03                        =         	ITEM_END + 0x005,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_04                        =         	ITEM_END + 0x006,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_05                        =         	ITEM_END + 0x007,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_06                        =         	ITEM_END + 0x008,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_07                        =         	ITEM_END + 0x009,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_08                        =         	ITEM_END + 0x00A,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_09                        =         	ITEM_END + 0x00B,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_10                        =         	ITEM_END + 0x00C,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_11                        =         	ITEM_END + 0x00D,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_12                        =         	ITEM_END + 0x00E,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_13                        =         	ITEM_END + 0x00F,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_14                        =         	ITEM_END + 0x010,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_15                        =         	ITEM_END + 0x011,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_16                        =         	ITEM_END + 0x012,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_17                        =         	ITEM_END + 0x013,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_18                        =         	ITEM_END + 0x014,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_19                        =         	ITEM_END + 0x015,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_20                        =         	ITEM_END + 0x016,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_21                        =         	ITEM_END + 0x017,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_22                        =         	ITEM_END + 0x018,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_23                        =         	ITEM_END + 0x019,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_24                        =         	ITEM_END + 0x01A,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_25                        =         	ITEM_END + 0x01B,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_26                        =         	ITEM_END + 0x01C,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_27                        =         	ITEM_END + 0x01D,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_28                        =         	ITEM_END + 0x01E,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_29                        =         	ITEM_END + 0x01F,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_30                        =         	ITEM_END + 0x020,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_31                        =         	ITEM_END + 0x021,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_32                        =         	ITEM_END + 0x022,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_33                        =         	ITEM_END + 0x023,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_34                        =         	ITEM_END + 0x024,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_35                        =         	ITEM_END + 0x025,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_36                        =         	ITEM_END + 0x026,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_37                        =         	ITEM_END + 0x027,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_38                        =         	ITEM_END + 0x028,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_39                        =         	ITEM_END + 0x029,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_40                        =         	ITEM_END + 0x02A,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_41                        =         	ITEM_END + 0x02B,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_42                        =         	ITEM_END + 0x02C,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_43                        =         	ITEM_END + 0x02D,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_44                        =         	ITEM_END + 0x02E,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_45                        =         	ITEM_END + 0x02F,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_46                        =         	ITEM_END + 0x030,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_47                        =         	ITEM_END + 0x031,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_48                        =         	ITEM_END + 0x032,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_49                        =         	ITEM_END + 0x033,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_50                        =         	ITEM_END + 0x034,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_51                        =         	ITEM_END + 0x035,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_52                        =         	ITEM_END + 0x036,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_53                        =         	ITEM_END + 0x037,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_54                        =         	ITEM_END + 0x038,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_55                        =         	ITEM_END + 0x039,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_56                        =         	ITEM_END + 0x03A,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_57                        =         	ITEM_END + 0x03B,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_58                        =         	ITEM_END + 0x03C,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_59                        =         	ITEM_END + 0x03D,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_60                        =         	ITEM_END + 0x03E,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_61                        =         	ITEM_END + 0x03F,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_62                        =         	ITEM_END + 0x040,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_63                        =         	ITEM_END + 0x041,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_64                        =         	ITEM_END + 0x042,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_65                        =         	ITEM_END + 0x043,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_66                        =         	ITEM_END + 0x044,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_67                        =         	ITEM_END + 0x045,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_68                        =         	ITEM_END + 0x046,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_69                        =         	ITEM_END + 0x047,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_70                        =         	ITEM_END + 0x048,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_FIELD_SLOT_71                        =         	ITEM_END + 0x049,  // Size: 72, Type: GUID, Flags: 1
           CONTAINER_END                        =                   	ITEM_END + 0x04A,  // Size: 1, Type: Int32, Flags: 0

// ITEM-prefix fields:
           ITEM_FIELD_OWNER                        =                	OBJECT_END + 0x000,  // Size: 2, Type: GUID, Flags: 1
           ITEM_FIELD_OWNER_01                        =             	OBJECT_END + 0x001,  // Size: 2, Type: GUID, Flags: 1
           ITEM_FIELD_CONTAINED                        =            	OBJECT_END + 0x002,  // Size: 2, Type: GUID, Flags: 1
           ITEM_FIELD_CONTAINED_01                        =         	OBJECT_END + 0x003,  // Size: 2, Type: GUID, Flags: 1
           ITEM_FIELD_CREATOR                        =              	OBJECT_END + 0x004,  // Size: 2, Type: GUID, Flags: 1
           ITEM_FIELD_CREATOR_01                        =           	OBJECT_END + 0x005,  // Size: 2, Type: GUID, Flags: 1
           ITEM_FIELD_GIFTCREATOR                        =          	OBJECT_END + 0x006,  // Size: 2, Type: GUID, Flags: 1
           ITEM_FIELD_GIFTCREATOR_01                        =       	OBJECT_END + 0x007,  // Size: 2, Type: GUID, Flags: 1
           ITEM_FIELD_STACK_COUNT                        =          	OBJECT_END + 0x008,  // Size: 1, Type: Int32, Flags: 20
           ITEM_FIELD_DURATION                        =             	OBJECT_END + 0x009,  // Size: 1, Type: Int32, Flags: 20
           ITEM_FIELD_SPELL_CHARGES                        =        	OBJECT_END + 0x00A,  // Size: 5, Type: Int32, Flags: 20
           ITEM_FIELD_SPELL_CHARGES_01                        =     	OBJECT_END + 0x00B,  // Size: 5, Type: Int32, Flags: 20
           ITEM_FIELD_SPELL_CHARGES_02                        =     	OBJECT_END + 0x00C,  // Size: 5, Type: Int32, Flags: 20
           ITEM_FIELD_SPELL_CHARGES_03                        =     	OBJECT_END + 0x00D,  // Size: 5, Type: Int32, Flags: 20
           ITEM_FIELD_SPELL_CHARGES_04                        =     	OBJECT_END + 0x00E,  // Size: 5, Type: Int32, Flags: 20
           ITEM_FIELD_FLAGS                        =                	OBJECT_END + 0x00F,  // Size: 1, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT                        =          	OBJECT_END + 0x010,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_01                        =       	OBJECT_END + 0x011,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_02                        =       	OBJECT_END + 0x012,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_03                        =       	OBJECT_END + 0x013,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_04                        =       	OBJECT_END + 0x014,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_05                        =       	OBJECT_END + 0x015,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_06                        =       	OBJECT_END + 0x016,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_07                        =       	OBJECT_END + 0x017,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_08                        =       	OBJECT_END + 0x018,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_09                        =       	OBJECT_END + 0x019,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_10                        =       	OBJECT_END + 0x01A,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_11                        =       	OBJECT_END + 0x01B,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_12                        =       	OBJECT_END + 0x01C,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_13                        =       	OBJECT_END + 0x01D,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_14                        =       	OBJECT_END + 0x01E,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_15                        =       	OBJECT_END + 0x01F,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_16                        =       	OBJECT_END + 0x020,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_17                        =       	OBJECT_END + 0x021,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_18                        =       	OBJECT_END + 0x022,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_19                        =       	OBJECT_END + 0x023,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_20                        =       	OBJECT_END + 0x024,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_21                        =       	OBJECT_END + 0x025,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_22                        =       	OBJECT_END + 0x026,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_23                        =       	OBJECT_END + 0x027,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_24                        =       	OBJECT_END + 0x028,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_25                        =       	OBJECT_END + 0x029,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_26                        =       	OBJECT_END + 0x02A,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_27                        =       	OBJECT_END + 0x02B,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_28                        =       	OBJECT_END + 0x02C,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_29                        =       	OBJECT_END + 0x02D,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_30                        =       	OBJECT_END + 0x02E,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_31                        =       	OBJECT_END + 0x02F,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_ENCHANTMENT_32                        =       	OBJECT_END + 0x030,  // Size: 33, Type: Int32, Flags: 1
           ITEM_FIELD_PROPERTY_SEED                        =        	OBJECT_END + 0x031,  // Size: 1, Type: Int32, Flags: 1
           ITEM_FIELD_RANDOM_PROPERTIES_ID                        = 	OBJECT_END + 0x032,  // Size: 1, Type: Int32, Flags: 1
           ITEM_FIELD_ITEM_TEXT_ID                        =         	OBJECT_END + 0x033,  // Size: 1, Type: Int32, Flags: 4
           ITEM_FIELD_DURABILITY                        =           	OBJECT_END + 0x034,  // Size: 1, Type: Int32, Flags: 20
           ITEM_FIELD_MAXDURABILITY                        =        	OBJECT_END + 0x035,  // Size: 1, Type: Int32, Flags: 20
           ITEM_END                                               =  	OBJECT_END + 0x036,  // Size: 1, Type: Int32, Flags: 0

// UNIT-prefix fields:
           UNIT_FIELD_CHARM                        =                	OBJECT_END + 0x000,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_CHARM_01                        =             	OBJECT_END + 0x001,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_SUMMON                        =               	OBJECT_END + 0x002,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_SUMMON_01                        =            	OBJECT_END + 0x003,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_CHARMEDBY                        =            	OBJECT_END + 0x004,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_CHARMEDBY_01                        =         	OBJECT_END + 0x005,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_SUMMONEDBY                        =           	OBJECT_END + 0x006,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_SUMMONEDBY_01                        =        	OBJECT_END + 0x007,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_CREATEDBY                        =            	OBJECT_END + 0x008,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_CREATEDBY_01                        =         	OBJECT_END + 0x009,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_TARGET                        =               	OBJECT_END + 0x00A,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_TARGET_01                        =            	OBJECT_END + 0x00B,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_PERSUADED                        =            	OBJECT_END + 0x00C,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_PERSUADED_01                        =         	OBJECT_END + 0x00D,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_CHANNEL_OBJECT                        =       	OBJECT_END + 0x00E,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_CHANNEL_OBJECT_01                        =    	OBJECT_END + 0x00F,  // Size: 2, Type: GUID, Flags: 1
           UNIT_FIELD_HEALTH                        =               	OBJECT_END + 0x010,  // Size: 1, Type: Int32, Flags: 256
           UNIT_FIELD_POWER1                        =               	OBJECT_END + 0x011,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_POWER2                        =               	OBJECT_END + 0x012,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_POWER3                        =               	OBJECT_END + 0x013,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_POWER4                        =               	OBJECT_END + 0x014,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_POWER5                        =               	OBJECT_END + 0x015,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_MAXHEALTH                        =            	OBJECT_END + 0x016,  // Size: 1, Type: Int32, Flags: 256
           UNIT_FIELD_MAXPOWER1                        =            	OBJECT_END + 0x017,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_MAXPOWER2                        =            	OBJECT_END + 0x018,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_MAXPOWER3                        =            	OBJECT_END + 0x019,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_MAXPOWER4                        =            	OBJECT_END + 0x01A,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_MAXPOWER5                        =            	OBJECT_END + 0x01B,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_LEVEL                        =                	OBJECT_END + 0x01C,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_FACTIONTEMPLATE                        =      	OBJECT_END + 0x01D,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_BYTES_0                        =              	OBJECT_END + 0x01E,  // Size: 1, Type: Bytes, Flags: 1
           UNIT_VIRTUAL_ITEM_SLOT_DISPLAY                        =  	OBJECT_END + 0x01F,  // Size: 3, Type: Int32, Flags: 1
           UNIT_VIRTUAL_ITEM_SLOT_DISPLAY_01                     = 	OBJECT_END + 0x020,  // Size: 3, Type: Int32, Flags: 1
           UNIT_VIRTUAL_ITEM_SLOT_DISPLAY_02                     = 	OBJECT_END + 0x021,  // Size: 3, Type: Int32, Flags: 1
           UNIT_VIRTUAL_ITEM_INFO                        =          	OBJECT_END + 0x022,  // Size: 6, Type: Bytes, Flags: 1
           UNIT_VIRTUAL_ITEM_INFO_01                        =       	OBJECT_END + 0x023,  // Size: 6, Type: Bytes, Flags: 1
           UNIT_VIRTUAL_ITEM_INFO_02                        =       	OBJECT_END + 0x024,  // Size: 6, Type: Bytes, Flags: 1
           UNIT_VIRTUAL_ITEM_INFO_03                        =       	OBJECT_END + 0x025,  // Size: 6, Type: Bytes, Flags: 1
           UNIT_VIRTUAL_ITEM_INFO_04                        =       	OBJECT_END + 0x026,  // Size: 6, Type: Bytes, Flags: 1
           UNIT_VIRTUAL_ITEM_INFO_05                        =       	OBJECT_END + 0x027,  // Size: 6, Type: Bytes, Flags: 1
           UNIT_FIELD_FLAGS                        =                	OBJECT_END + 0x028,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_FLAGS_2                        =              	OBJECT_END + 0x029,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_AURA                        =                 	OBJECT_END + 0x02A,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_01                        =              	OBJECT_END + 0x02B,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_02                        =              	OBJECT_END + 0x02C,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_03                        =              	OBJECT_END + 0x02D,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_04                        =              	OBJECT_END + 0x02E,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_05                        =              	OBJECT_END + 0x02F,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_06                        =              	OBJECT_END + 0x030,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_07                        =              	OBJECT_END + 0x031,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_08                        =              	OBJECT_END + 0x032,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_09                        =              	OBJECT_END + 0x033,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_10                        =              	OBJECT_END + 0x034,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_11                        =              	OBJECT_END + 0x035,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_12                        =              	OBJECT_END + 0x036,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_13                        =              	OBJECT_END + 0x037,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_14                        =              	OBJECT_END + 0x038,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_15                        =              	OBJECT_END + 0x039,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_16                        =              	OBJECT_END + 0x03A,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_17                        =              	OBJECT_END + 0x03B,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_18                        =              	OBJECT_END + 0x03C,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_19                        =              	OBJECT_END + 0x03D,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_20                        =              	OBJECT_END + 0x03E,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_21                        =              	OBJECT_END + 0x03F,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_22                        =              	OBJECT_END + 0x040,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_23                        =              	OBJECT_END + 0x041,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_24                        =              	OBJECT_END + 0x042,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_25                        =              	OBJECT_END + 0x043,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_26                        =              	OBJECT_END + 0x044,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_27                        =              	OBJECT_END + 0x045,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_28                        =              	OBJECT_END + 0x046,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_29                        =              	OBJECT_END + 0x047,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_30                        =              	OBJECT_END + 0x048,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_31                        =              	OBJECT_END + 0x049,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_32                        =              	OBJECT_END + 0x04A,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_33                        =              	OBJECT_END + 0x04B,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_34                        =              	OBJECT_END + 0x04C,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_35                        =              	OBJECT_END + 0x04D,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_36                        =              	OBJECT_END + 0x04E,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_37                        =              	OBJECT_END + 0x04F,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_38                        =              	OBJECT_END + 0x050,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_39                        =              	OBJECT_END + 0x051,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_40                        =              	OBJECT_END + 0x052,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_41                        =              	OBJECT_END + 0x053,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_42                        =              	OBJECT_END + 0x054,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_43                        =              	OBJECT_END + 0x055,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_44                        =              	OBJECT_END + 0x056,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_45                        =              	OBJECT_END + 0x057,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_46                        =              	OBJECT_END + 0x058,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_47                        =              	OBJECT_END + 0x059,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_48                        =              	OBJECT_END + 0x05A,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_49                        =              	OBJECT_END + 0x05B,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_50                        =              	OBJECT_END + 0x05C,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_51                        =              	OBJECT_END + 0x05D,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_52                        =              	OBJECT_END + 0x05E,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_53                        =              	OBJECT_END + 0x05F,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_54                        =              	OBJECT_END + 0x060,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURA_55                        =              	OBJECT_END + 0x061,  // Size: 56, Type: Int32, Flags: 1
           UNIT_FIELD_AURAFLAGS                        =            	OBJECT_END + 0x062,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_01                        =         	OBJECT_END + 0x063,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_02                        =         	OBJECT_END + 0x064,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_03                        =         	OBJECT_END + 0x065,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_04                        =         	OBJECT_END + 0x066,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_05                        =         	OBJECT_END + 0x067,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_06                        =         	OBJECT_END + 0x068,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_07                        =         	OBJECT_END + 0x069,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_08                        =         	OBJECT_END + 0x06A,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_09                        =         	OBJECT_END + 0x06B,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_10                        =         	OBJECT_END + 0x06C,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_11                        =         	OBJECT_END + 0x06D,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_12                        =         	OBJECT_END + 0x06E,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAFLAGS_13                        =         	OBJECT_END + 0x06F,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS                        =           	OBJECT_END + 0x070,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_01                        =        	OBJECT_END + 0x071,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_02                        =        	OBJECT_END + 0x072,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_03                        =        	OBJECT_END + 0x073,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_04                        =        	OBJECT_END + 0x074,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_05                        =        	OBJECT_END + 0x075,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_06                        =        	OBJECT_END + 0x076,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_07                        =        	OBJECT_END + 0x077,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_08                        =        	OBJECT_END + 0x078,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_09                        =        	OBJECT_END + 0x079,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_10                        =        	OBJECT_END + 0x07A,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_11                        =        	OBJECT_END + 0x07B,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_12                        =        	OBJECT_END + 0x07C,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURALEVELS_13                        =        	OBJECT_END + 0x07D,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS                        =     	OBJECT_END + 0x07E,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_01                        =  	OBJECT_END + 0x07F,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_02                        =  	OBJECT_END + 0x080,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_03                        =  	OBJECT_END + 0x081,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_04                        =  	OBJECT_END + 0x082,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_05                        =  	OBJECT_END + 0x083,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_06                        =  	OBJECT_END + 0x084,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_07                        =  	OBJECT_END + 0x085,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_08                        =  	OBJECT_END + 0x086,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_09                        =  	OBJECT_END + 0x087,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_10                        =  	OBJECT_END + 0x088,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_11                        =  	OBJECT_END + 0x089,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_12                        =  	OBJECT_END + 0x08A,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURAAPPLICATIONS_13                        =  	OBJECT_END + 0x08B,  // Size: 14, Type: Bytes, Flags: 1
           UNIT_FIELD_AURASTATE                        =            	OBJECT_END + 0x08C,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_BASEATTACKTIME                        =       	OBJECT_END + 0x08D,  // Size: 2, Type: Int32, Flags: 1
           UNIT_FIELD_BASEATTACKTIME_01                        =    	OBJECT_END + 0x08E,  // Size: 2, Type: Int32, Flags: 1
           UNIT_FIELD_RANGEDATTACKTIME                        =     	OBJECT_END + 0x08F,  // Size: 1, Type: Int32, Flags: 2
           UNIT_FIELD_BOUNDINGRADIUS                        =       	OBJECT_END + 0x090,  // Size: 1, Type: Float, Flags: 1
           UNIT_FIELD_COMBATREACH                        =          	OBJECT_END + 0x091,  // Size: 1, Type: Float, Flags: 1
           UNIT_FIELD_DISPLAYID                        =            	OBJECT_END + 0x092,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_NATIVEDISPLAYID                        =      	OBJECT_END + 0x093,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_MOUNTDISPLAYID                        =       	OBJECT_END + 0x094,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_MINDAMAGE                        =            	OBJECT_END + 0x095,  // Size: 1, Type: Float, Flags: 38
           UNIT_FIELD_MAXDAMAGE                        =            	OBJECT_END + 0x096,  // Size: 1, Type: Float, Flags: 38
           UNIT_FIELD_MINOFFHANDDAMAGE                        =     	OBJECT_END + 0x097,  // Size: 1, Type: Float, Flags: 38
           UNIT_FIELD_MAXOFFHANDDAMAGE                        =     	OBJECT_END + 0x098,  // Size: 1, Type: Float, Flags: 38
           UNIT_FIELD_BYTES_1                        =              	OBJECT_END + 0x099,  // Size: 1, Type: Bytes, Flags: 1
           UNIT_FIELD_PETNUMBER                        =            	OBJECT_END + 0x09A,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_PET_NAME_TIMESTAMP                        =   	OBJECT_END + 0x09B,  // Size: 1, Type: Int32, Flags: 1
           UNIT_FIELD_PETEXPERIENCE                        =        	OBJECT_END + 0x09C,  // Size: 1, Type: Int32, Flags: 4
           UNIT_FIELD_PETNEXTLEVELEXP                        =      	OBJECT_END + 0x09D,  // Size: 1, Type: Int32, Flags: 4
           UNIT_DYNAMIC_FLAGS                        =              	OBJECT_END + 0x09E,  // Size: 1, Type: Int32, Flags: 256
           UNIT_CHANNEL_SPELL                        =              	OBJECT_END + 0x09F,  // Size: 1, Type: Int32, Flags: 1
           UNIT_MOD_CAST_SPEED                        =             	OBJECT_END + 0x0A0,  // Size: 1, Type: Float, Flags: 1
           UNIT_CREATED_BY_SPELL                        =           	OBJECT_END + 0x0A1,  // Size: 1, Type: Int32, Flags: 1
           UNIT_NPC_FLAGS                        =                  	OBJECT_END + 0x0A2,  // Size: 1, Type: Int32, Flags: 256
           UNIT_NPC_EMOTESTATE                        =             	OBJECT_END + 0x0A3,  // Size: 1, Type: Int32, Flags: 1
           UNIT_TRAINING_POINTS                        =            	OBJECT_END + 0x0A4,  // Size: 1, Type: Chars?, Flags: 4
           UNIT_FIELD_STAT0                        =                	OBJECT_END + 0x0A5,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_STAT1                        =                	OBJECT_END + 0x0A6,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_STAT2                        =                	OBJECT_END + 0x0A7,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_STAT3                        =                	OBJECT_END + 0x0A8,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_STAT4                        =                	OBJECT_END + 0x0A9,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_POSSTAT0                        =             	OBJECT_END + 0x0AA,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_POSSTAT1                        =             	OBJECT_END + 0x0AB,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_POSSTAT2                        =             	OBJECT_END + 0x0AC,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_POSSTAT3                        =             	OBJECT_END + 0x0AD,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_POSSTAT4                        =             	OBJECT_END + 0x0AE,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_NEGSTAT0                        =             	OBJECT_END + 0x0AF,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_NEGSTAT1                        =             	OBJECT_END + 0x0B0,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_NEGSTAT2                        =             	OBJECT_END + 0x0B1,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_NEGSTAT3                        =             	OBJECT_END + 0x0B2,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_NEGSTAT4                        =             	OBJECT_END + 0x0B3,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCES                        =          	OBJECT_END + 0x0B4,  // Size: 7, Type: Int32, Flags: 38
           UNIT_FIELD_RESISTANCES_01                        =       	OBJECT_END + 0x0B5,  // Size: 7, Type: Int32, Flags: 38
           UNIT_FIELD_RESISTANCES_02                        =       	OBJECT_END + 0x0B6,  // Size: 7, Type: Int32, Flags: 38
           UNIT_FIELD_RESISTANCES_03                        =       	OBJECT_END + 0x0B7,  // Size: 7, Type: Int32, Flags: 38
           UNIT_FIELD_RESISTANCES_04                        =       	OBJECT_END + 0x0B8,  // Size: 7, Type: Int32, Flags: 38
           UNIT_FIELD_RESISTANCES_05                        =       	OBJECT_END + 0x0B9,  // Size: 7, Type: Int32, Flags: 38
           UNIT_FIELD_RESISTANCES_06                        =       	OBJECT_END + 0x0BA,  // Size: 7, Type: Int32, Flags: 38
           UNIT_FIELD_RESISTANCEBUFFMODSPOSITIVE            =      	OBJECT_END + 0x0BB,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSPOSITIVE_01         =      	OBJECT_END + 0x0BC,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSPOSITIVE_02         =      	OBJECT_END + 0x0BD,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSPOSITIVE_03         =      	OBJECT_END + 0x0BE,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSPOSITIVE_04         =      	OBJECT_END + 0x0BF,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSPOSITIVE_05         =      	OBJECT_END + 0x0C0,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSPOSITIVE_06         =      	OBJECT_END + 0x0C1,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSNEGATIVE            =      	OBJECT_END + 0x0C2,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSNEGATIVE_01         =      	OBJECT_END + 0x0C3,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSNEGATIVE_02         =      	OBJECT_END + 0x0C4,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSNEGATIVE_03         =      	OBJECT_END + 0x0C5,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSNEGATIVE_04         =      	OBJECT_END + 0x0C6,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSNEGATIVE_05         =      	OBJECT_END + 0x0C7,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_RESISTANCEBUFFMODSNEGATIVE_06         =      	OBJECT_END + 0x0C8,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_BASE_MANA                        =            	OBJECT_END + 0x0C9,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_BASE_HEALTH                        =          	OBJECT_END + 0x0CA,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_BYTES_2                        =              	OBJECT_END + 0x0CB,  // Size: 1, Type: Bytes, Flags: 1
           UNIT_FIELD_ATTACK_POWER                        =         	OBJECT_END + 0x0CC,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_ATTACK_POWER_MODS                        =    	OBJECT_END + 0x0CD,  // Size: 1, Type: Chars?, Flags: 6
           UNIT_FIELD_ATTACK_POWER_MULTIPLIER                 =    	OBJECT_END + 0x0CE,  // Size: 1, Type: Float, Flags: 6
           UNIT_FIELD_RANGED_ATTACK_POWER                        =  	OBJECT_END + 0x0CF,  // Size: 1, Type: Int32, Flags: 6
           UNIT_FIELD_RANGED_ATTACK_POWER_MODS               =     	OBJECT_END + 0x0D0,  // Size: 1, Type: Chars?, Flags: 6
           UNIT_FIELD_RANGED_ATTACK_POWER_MULTIPLIER         =     	OBJECT_END + 0x0D1,  // Size: 1, Type: Float, Flags: 6
           UNIT_FIELD_MINRANGEDDAMAGE                        =      	OBJECT_END + 0x0D2,  // Size: 1, Type: Float, Flags: 6
           UNIT_FIELD_MAXRANGEDDAMAGE                        =      	OBJECT_END + 0x0D3,  // Size: 1, Type: Float, Flags: 6
           UNIT_FIELD_POWER_COST_MODIFIER                        =  	OBJECT_END + 0x0D4,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_POWER_COST_MODIFIER_01                 =     	OBJECT_END + 0x0D5,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_POWER_COST_MODIFIER_02                 =     	OBJECT_END + 0x0D6,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_POWER_COST_MODIFIER_03                 =     	OBJECT_END + 0x0D7,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_POWER_COST_MODIFIER_04                 =     	OBJECT_END + 0x0D8,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_POWER_COST_MODIFIER_05                 =     	OBJECT_END + 0x0D9,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_POWER_COST_MODIFIER_06                 =     	OBJECT_END + 0x0DA,  // Size: 7, Type: Int32, Flags: 6
           UNIT_FIELD_POWER_COST_MULTIPLIER                        =	OBJECT_END + 0x0DB,  // Size: 7, Type: Float, Flags: 6
           UNIT_FIELD_POWER_COST_MULTIPLIER_01               =     	OBJECT_END + 0x0DC,  // Size: 7, Type: Float, Flags: 6
           UNIT_FIELD_POWER_COST_MULTIPLIER_02               =     	OBJECT_END + 0x0DD,  // Size: 7, Type: Float, Flags: 6
           UNIT_FIELD_POWER_COST_MULTIPLIER_03               =     	OBJECT_END + 0x0DE,  // Size: 7, Type: Float, Flags: 6
           UNIT_FIELD_POWER_COST_MULTIPLIER_04               =     	OBJECT_END + 0x0DF,  // Size: 7, Type: Float, Flags: 6
           UNIT_FIELD_POWER_COST_MULTIPLIER_05               =     	OBJECT_END + 0x0E0,  // Size: 7, Type: Float, Flags: 6
           UNIT_FIELD_POWER_COST_MULTIPLIER_06               =     	OBJECT_END + 0x0E1,  // Size: 7, Type: Float, Flags: 6
           UNIT_END                                          = 	OBJECT_END + 0x0E2,  // Size: 1, Type: Int32, Flags: 0

// PLAYER-prefix fields:
           PLAYER_DUEL_ARBITER                        =             	UNIT_END + 0x000,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_DUEL_ARBITER_01                        =          	UNIT_END + 0x001,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_FLAGS                        =                    	UNIT_END + 0x002,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_GUILDID                        =                  	UNIT_END + 0x003,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_GUILDRANK                        =                	UNIT_END + 0x004,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_BYTES                        =                    	UNIT_END + 0x005,  // Size: 1, Type: Bytes, Flags: 1
           PLAYER_BYTES_2                        =                  	UNIT_END + 0x006,  // Size: 1, Type: Bytes, Flags: 1
           PLAYER_BYTES_3                        =                  	UNIT_END + 0x007,  // Size: 1, Type: Bytes, Flags: 1
           PLAYER_DUEL_TEAM                        =                	UNIT_END + 0x008,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_GUILD_TIMESTAMP                        =          	UNIT_END + 0x009,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_QUEST_LOG_1_1                        =            	UNIT_END + 0x00A,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_1_2                        =            	UNIT_END + 0x00B,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_1_01                        =           	UNIT_END + 0x00C,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_2_1                        =            	UNIT_END + 0x00D,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_2_2                        =            	UNIT_END + 0x00E,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_2_01                        =           	UNIT_END + 0x00F,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_3_1                        =            	UNIT_END + 0x010,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_3_2                        =            	UNIT_END + 0x011,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_3_01                        =           	UNIT_END + 0x012,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_4_1                        =            	UNIT_END + 0x013,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_4_2                        =            	UNIT_END + 0x014,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_4_01                        =           	UNIT_END + 0x015,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_5_1                        =            	UNIT_END + 0x016,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_5_2                        =            	UNIT_END + 0x017,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_5_01                        =           	UNIT_END + 0x018,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_6_1                        =            	UNIT_END + 0x019,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_6_2                        =            	UNIT_END + 0x01A,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_6_01                        =           	UNIT_END + 0x01B,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_7_1                        =            	UNIT_END + 0x01C,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_7_2                        =            	UNIT_END + 0x01D,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_7_01                        =           	UNIT_END + 0x01E,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_8_1                        =            	UNIT_END + 0x01F,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_8_2                        =            	UNIT_END + 0x020,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_8_01                        =           	UNIT_END + 0x021,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_9_1                        =            	UNIT_END + 0x022,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_9_2                        =            	UNIT_END + 0x023,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_9_01                        =           	UNIT_END + 0x024,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_10_1                        =           	UNIT_END + 0x025,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_10_2                        =           	UNIT_END + 0x026,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_10_01                        =          	UNIT_END + 0x027,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_11_1                        =           	UNIT_END + 0x028,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_11_2                        =           	UNIT_END + 0x029,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_11_01                        =          	UNIT_END + 0x02A,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_12_1                        =           	UNIT_END + 0x02B,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_12_2                        =           	UNIT_END + 0x02C,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_12_01                        =          	UNIT_END + 0x02D,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_13_1                        =           	UNIT_END + 0x02E,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_13_2                        =           	UNIT_END + 0x02F,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_13_01                        =          	UNIT_END + 0x030,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_14_1                        =           	UNIT_END + 0x031,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_14_2                        =           	UNIT_END + 0x032,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_14_01                        =          	UNIT_END + 0x033,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_15_1                        =           	UNIT_END + 0x034,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_15_2                        =           	UNIT_END + 0x035,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_15_01                        =          	UNIT_END + 0x036,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_16_1                        =           	UNIT_END + 0x037,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_16_2                        =           	UNIT_END + 0x038,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_16_01                        =          	UNIT_END + 0x039,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_17_1                        =           	UNIT_END + 0x03A,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_17_2                        =           	UNIT_END + 0x03B,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_17_01                        =          	UNIT_END + 0x03C,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_18_1                        =           	UNIT_END + 0x03D,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_18_2                        =           	UNIT_END + 0x03E,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_18_01                        =          	UNIT_END + 0x03F,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_19_1                        =           	UNIT_END + 0x040,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_19_2                        =           	UNIT_END + 0x041,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_19_01                        =          	UNIT_END + 0x042,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_20_1                        =           	UNIT_END + 0x043,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_20_2                        =           	UNIT_END + 0x044,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_20_01                        =          	UNIT_END + 0x045,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_21_1                        =           	UNIT_END + 0x046,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_21_2                        =           	UNIT_END + 0x047,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_21_01                        =          	UNIT_END + 0x048,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_22_1                        =           	UNIT_END + 0x049,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_22_2                        =           	UNIT_END + 0x04A,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_22_01                        =          	UNIT_END + 0x04B,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_23_1                        =           	UNIT_END + 0x04C,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_23_2                        =           	UNIT_END + 0x04D,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_23_01                        =          	UNIT_END + 0x04E,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_24_1                        =           	UNIT_END + 0x04F,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_24_2                        =           	UNIT_END + 0x050,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_24_01                        =          	UNIT_END + 0x051,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_25_1                        =           	UNIT_END + 0x052,  // Size: 1, Type: Int32, Flags: 64
           PLAYER_QUEST_LOG_25_2                        =           	UNIT_END + 0x053,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_QUEST_LOG_25_01                        =          	UNIT_END + 0x054,  // Size: 2, Type: Int32, Flags: 2
           PLAYER_VISIBLE_ITEM_1_CREATOR                        =   	UNIT_END + 0x055,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_1_CREATOR_01                        =	UNIT_END + 0x056,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_1_0                        =         	UNIT_END + 0x057,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_01                        =        	UNIT_END + 0x058,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_02                        =        	UNIT_END + 0x059,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_03                        =        	UNIT_END + 0x05A,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_04                        =        	UNIT_END + 0x05B,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_05                        =        	UNIT_END + 0x05C,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_06                        =        	UNIT_END + 0x05D,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_07                        =        	UNIT_END + 0x05E,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_08                        =        	UNIT_END + 0x05F,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_09                        =        	UNIT_END + 0x060,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_10                        =        	UNIT_END + 0x061,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_11                        =        	UNIT_END + 0x062,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_1_PROPERTIES                        =	UNIT_END + 0x063,  // Size: 1, Type: Chars?, Flags: 1
           PLAYER_VISIBLE_ITEM_1_PAD                        =       	UNIT_END + 0x064,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_CREATOR                        =   	UNIT_END + 0x065,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_2_CREATOR_01                        =	UNIT_END + 0x066,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_2_0                        =         	UNIT_END + 0x067,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_01                        =        	UNIT_END + 0x068,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_02                        =        	UNIT_END + 0x069,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_03                        =        	UNIT_END + 0x06A,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_04                        =        	UNIT_END + 0x06B,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_05                        =        	UNIT_END + 0x06C,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_06                        =        	UNIT_END + 0x06D,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_07                        =        	UNIT_END + 0x06E,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_08                        =        	UNIT_END + 0x06F,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_09                        =        	UNIT_END + 0x070,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_10                        =        	UNIT_END + 0x071,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_11                        =        	UNIT_END + 0x072,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_2_PROPERTIES                        =	UNIT_END + 0x073,  // Size: 1, Type: Chars?, Flags: 1
           PLAYER_VISIBLE_ITEM_2_PAD                        =       	UNIT_END + 0x074,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_CREATOR                        =   	UNIT_END + 0x075,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_3_CREATOR_01                        =	UNIT_END + 0x076,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_3_0                        =         	UNIT_END + 0x077,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_01                        =        	UNIT_END + 0x078,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_02                        =        	UNIT_END + 0x079,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_03                        =        	UNIT_END + 0x07A,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_04                        =        	UNIT_END + 0x07B,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_05                        =        	UNIT_END + 0x07C,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_06                        =        	UNIT_END + 0x07D,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_07                        =        	UNIT_END + 0x07E,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_08                        =        	UNIT_END + 0x07F,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_09                        =        	UNIT_END + 0x080,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_10                        =        	UNIT_END + 0x081,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_11                        =        	UNIT_END + 0x082,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_3_PROPERTIES                        =	UNIT_END + 0x083,  // Size: 1, Type: Chars?, Flags: 1
           PLAYER_VISIBLE_ITEM_3_PAD                        =       	UNIT_END + 0x084,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_CREATOR                        =   	UNIT_END + 0x085,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_4_CREATOR_01                        =	UNIT_END + 0x086,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_4_0                        =         	UNIT_END + 0x087,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_01                        =        	UNIT_END + 0x088,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_02                        =        	UNIT_END + 0x089,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_03                        =        	UNIT_END + 0x08A,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_04                        =        	UNIT_END + 0x08B,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_05                        =        	UNIT_END + 0x08C,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_06                        =        	UNIT_END + 0x08D,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_07                        =        	UNIT_END + 0x08E,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_08                        =        	UNIT_END + 0x08F,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_09                        =        	UNIT_END + 0x090,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_10                        =        	UNIT_END + 0x091,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_11                        =        	UNIT_END + 0x092,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_4_PROPERTIES                        =	UNIT_END + 0x093,  // Size: 1, Type: Chars?, Flags: 1
           PLAYER_VISIBLE_ITEM_4_PAD                        =       	UNIT_END + 0x094,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_CREATOR                        =   	UNIT_END + 0x095,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_5_CREATOR_01                        =	UNIT_END + 0x096,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_5_0                        =         	UNIT_END + 0x097,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_01                        =        	UNIT_END + 0x098,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_02                        =        	UNIT_END + 0x099,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_03                        =        	UNIT_END + 0x09A,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_04                        =        	UNIT_END + 0x09B,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_05                        =        	UNIT_END + 0x09C,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_06                        =        	UNIT_END + 0x09D,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_07                        =        	UNIT_END + 0x09E,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_08                        =        	UNIT_END + 0x09F,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_09                        =        	UNIT_END + 0x0A0,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_10                        =        	UNIT_END + 0x0A1,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_11                        =        	UNIT_END + 0x0A2,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_5_PROPERTIES                        =	UNIT_END + 0x0A3,  // Size: 1, Type: Chars?, Flags: 1
           PLAYER_VISIBLE_ITEM_5_PAD                        =       	UNIT_END + 0x0A4,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_CREATOR                        =   	UNIT_END + 0x0A5,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_6_CREATOR_01                        =	UNIT_END + 0x0A6,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_6_0                        =         	UNIT_END + 0x0A7,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_01                        =        	UNIT_END + 0x0A8,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_02                        =        	UNIT_END + 0x0A9,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_03                        =        	UNIT_END + 0x0AA,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_04                        =        	UNIT_END + 0x0AB,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_05                        =        	UNIT_END + 0x0AC,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_06                        =        	UNIT_END + 0x0AD,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_07                        =        	UNIT_END + 0x0AE,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_08                        =        	UNIT_END + 0x0AF,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_09                        =        	UNIT_END + 0x0B0,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_10                        =        	UNIT_END + 0x0B1,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_11                        =        	UNIT_END + 0x0B2,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_6_PROPERTIES                        =	UNIT_END + 0x0B3,  // Size: 1, Type: Chars?, Flags: 1
           PLAYER_VISIBLE_ITEM_6_PAD                        =       	UNIT_END + 0x0B4,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_CREATOR                        =   	UNIT_END + 0x0B5,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_7_CREATOR_01                        =	UNIT_END + 0x0B6,  // Size: 2, Type: GUID, Flags: 1
           PLAYER_VISIBLE_ITEM_7_0                        =         	UNIT_END + 0x0B7,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_01                        =        	UNIT_END + 0x0B8,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_02                        =        	UNIT_END + 0x0B9,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_03                        =        	UNIT_END + 0x0BA,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_04                        =        	UNIT_END + 0x0BB,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_05                        =        	UNIT_END + 0x0BC,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_06                        =        	UNIT_END + 0x0BD,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_07                        =        	UNIT_END + 0x0BE,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_08                        =        	UNIT_END + 0x0BF,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_09                        =        	UNIT_END + 0x0C0,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_10                        =        	UNIT_END + 0x0C1,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_11                        =        	UNIT_END + 0x0C2,  // Size: 12, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_7_PROPERTIES                        =	UNIT_END + 0x0C3,  // Size: 1, Type: Chars?, Flags: 1
           PLAYER_VISIBLE_ITEM_7_PAD                        =       	UNIT_END + 0x0C4,  // Size: 1, Type: Int32, Flags: 1
           PLAYER_VISIBLE_ITEM_8_CREATOR                        =   	UNIT_END + 0x0C5,  // Size: 2, Ty
    };
}
